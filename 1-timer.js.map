{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst options = {\n    enableTime: true,\n    time_24hr: true,\n    defaultDate: new Date(),\n    minuteIncrement: 1,\n    onClose: handleOnClose,\n  };\n\nconst newInput = document.querySelector('#datetime-picker');\nflatpickr(newInput, options);\n\nlet userSelectedDate = [];\nconst startButton = document.querySelector('.button-start');\n\nfunction handleOnClose (selectedDates) {\n    const selectedDate = selectedDates[0];\n    const currentDate = new Date();\n\n    if(selectedDate <= currentDate){\n        iziToast.info({\n            title: 'Info',\n            message: 'Please choose a date in the future',\n        });\n        startButton.disabled = true;\n    } else {\n        userSelectedDate = selectedDate;\n        startButton.disabled = false;\n    } \n}\n\nstartButton.addEventListener('click', handleClick);\n\nfunction handleClick() {\n    startButton.disabled = true;\n    let timeInterval;\n\n    if(timeInterval) return;\n\n    timeInterval = setInterval(() => {\n        const currentTime = new Date().getTime();\n        const deltaTime = userSelectedDate - currentTime;\n\n        if(deltaTime <= 0){\n            timeInterval = false;\n            updateTime(0);\n        } else {\n            updateTime(deltaTime);\n        }\n    }, 1000);\n}\n\nconst timer = document.querySelector('.timer');\n\nfunction updateTime(ms){\n    const {days, hours, minutes, seconds} = convertMs(ms);\n    const updatedTime = `${days} DAYS ${hours} HOURS ${minutes} MINUTES ${seconds} SECONDS`;\n    timer.innerHTML = updatedTime;\n\n}\n\nfunction convertMs(ms) {\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n  \n    const days = Math.floor(ms / day);\n    const hours = Math.floor((ms % day) / hour);\n    const minutes = Math.floor(((ms % day) % hour) / minute);\n    const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n  \n    return { days, hours, minutes, seconds };\n  }\n  "],"names":["options","handleOnClose","newInput","flatpickr","userSelectedDate","startButton","selectedDates","selectedDate","iziToast","handleClick","timeInterval","currentTime","deltaTime","updateTime","timer","ms","days","hours","minutes","seconds","convertMs","updatedTime"],"mappings":"wvBAKA,MAAMA,EAAU,CACZ,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAASC,CACb,EAEMC,EAAW,SAAS,cAAc,kBAAkB,EAC1DC,EAAUD,EAAUF,CAAO,EAE3B,IAAII,EAAmB,CAAA,EACvB,MAAMC,EAAc,SAAS,cAAc,eAAe,EAE1D,SAASJ,EAAeK,EAAe,CACnC,MAAMC,EAAeD,EAAc,CAAC,EAGjCC,GAFiB,IAAI,MAGpBC,EAAS,KAAK,CACV,MAAO,OACP,QAAS,oCACrB,CAAS,EACDH,EAAY,SAAW,KAEvBD,EAAmBG,EACnBF,EAAY,SAAW,GAE/B,CAEAA,EAAY,iBAAiB,QAASI,CAAW,EAEjD,SAASA,GAAc,CACnBJ,EAAY,SAAW,GACvB,IAAIK,EAEDA,IAEHA,EAAe,YAAY,IAAM,CAC7B,MAAMC,EAAc,IAAI,KAAM,EAAC,QAAO,EAChCC,EAAYR,EAAmBO,EAElCC,GAAa,GACZF,EAAe,GACfG,EAAW,CAAC,GAEZA,EAAWD,CAAS,CAE3B,EAAE,GAAI,EACX,CAEA,MAAME,EAAQ,SAAS,cAAc,QAAQ,EAE7C,SAASD,EAAWE,EAAG,CACnB,KAAM,CAAC,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAIC,EAAUL,CAAE,EAC9CM,EAAc,GAAGL,CAAI,SAASC,CAAK,UAAUC,CAAO,YAAYC,CAAO,WAC7EL,EAAM,UAAYO,CAEtB,CAEA,SAASD,EAAUL,EAAI,CAMnB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CAC1C"}